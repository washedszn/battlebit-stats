version: '3.8'

services:
  db:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  redis:
    image: "redis:alpine"

  # backend-gunicorn:
  #   build: ./backend
  #   command: >
  #     bash -c "python manage.py wait_for_db &&
  #              python manage.py migrate &&
  #              gunicorn backend.wsgi:application --bind 0.0.0.0:8000"
  #   volumes:
  #     - ./backend:/code
  #   ports:
  #     - 8000:8000
  #   depends_on:
  #     - db
  #     - redis
  #   env_file:
  #     - ./backend/.env

  backend-daphne:
    build: ./backend
    command: >
      bash -c "python manage.py wait_for_db &&
               python manage.py migrate &&
               daphne backend.asgi:application --port 8001 --bind 0.0.0.0"
    volumes:
      - ./backend:/code
    ports:
      - 8001:8001
    depends_on:
      - db
      - redis
    env_file:
      - ./backend/.env

  adminer:
    image: adminer
    ports:
      - 8080:8080
    depends_on:
      - db

  celery-worker:
    build: ./backend
    command: celery -A backend worker -l info -E
    volumes:
      - ./backend:/code
    depends_on:
      - db
      - redis
    env_file:
      - ./backend/.env

  celery-beat:
    build: ./backend
    command: celery -A backend beat -l info
    volumes:
      - ./backend:/code
    depends_on:
      - db
      - redis
      - celery-worker
    env_file:
      - ./backend/.env

  flower:
    build: ./backend
    command: celery -A backend flower --broker=redis://redis:6379/0
    ports:
      - 5555:5555
    depends_on:
      - celery-worker
      - redis
    env_file:
      - ./backend/.env

volumes:
  postgres_data:
